[{"C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\index.js":"1","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\App.js":"2","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\serviceWorker.js":"3","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\utils\\theme.js":"4","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\views\\LandingPage.js":"5","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\reducers\\rowStore.js":"6","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\AddBtn.js":"7","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\DeleteBtn.js":"8","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\EditBtn.js":"9","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\PredictBtn.js":"10","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\SearchBar.js":"11","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\MainTable.js":"12","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\utils\\formatter.js":"13","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\services\\services.js":"14","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\actions\\rowAction.js":"15","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\utils\\constants.js":"16"},{"size":764,"mtime":1616351494000,"results":"17","hashOfConfig":"18"},{"size":536,"mtime":1616358408000,"results":"19","hashOfConfig":"18"},{"size":5226,"mtime":1589284044000,"results":"20","hashOfConfig":"18"},{"size":473,"mtime":1617342328000,"results":"21","hashOfConfig":"18"},{"size":3908,"mtime":1624855648806,"results":"22","hashOfConfig":"18"},{"size":1415,"mtime":1624824389286,"results":"23","hashOfConfig":"18"},{"size":14360,"mtime":1624881334602,"results":"24","hashOfConfig":"18"},{"size":4712,"mtime":1617370230000,"results":"25","hashOfConfig":"18"},{"size":7365,"mtime":1617370188000,"results":"26","hashOfConfig":"18"},{"size":2342,"mtime":1617334530000,"results":"27","hashOfConfig":"18"},{"size":3157,"mtime":1624824498163,"results":"28","hashOfConfig":"18"},{"size":17683,"mtime":1624879173140,"results":"29","hashOfConfig":"18"},{"size":2191,"mtime":1591529928000,"results":"30","hashOfConfig":"18"},{"size":726,"mtime":1617371888000,"results":"31","hashOfConfig":"18"},{"size":807,"mtime":1624824414359,"results":"32","hashOfConfig":"18"},{"size":118,"mtime":1616947868000,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"1789wx3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\index.js",["72"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport theme from '../src/utils/theme';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n/*\r\nCRACKED BY ILLUMINATI\r\nTRUST US AND UNCOMMENT THIS CODE ONCE YOU SETUP YOUR REDUX STORE ;-)\r\n ReactDOM.render(\r\n   <Provider store={store}>\r\n     <MuiThemeProvider theme={theme}>\r\n       <App />\r\n     </MuiThemeProvider>\r\n   </Provider>,\r\n   document.getElementById('root')\r\n );\r\n*/\r\nserviceWorker.unregister();\r\n\r\n\r\n","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\App.js",[],"C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\serviceWorker.js",[],"C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\utils\\theme.js",[],"C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\views\\LandingPage.js",["73","74","75","76"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport hrcLogo from \"../assets/highRadiuslogo.svg\";\r\nimport abcLogo from \"../assets/companyLogo.svg\";\r\nimport AddBtn from \"../components/AddBtn\";\r\nimport EditBtn from \"../components/EditBtn\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport PredictBtn from \"../components/PredictBtn\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport MainTable from \"../components/MainTable\";\r\n// import InvoiceTable from \"../components/table\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"grid\",\r\n    gridTemplateRows: \"10vh 90vh\",\r\n  },\r\n  abcContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"start\",\r\n    alignItems: \"center\",\r\n  },\r\n  hrcLogo: {\r\n    width: \"23.483rem\",\r\n    height: \"4.95rem\",\r\n  },\r\n  abcLogo: {\r\n    width: \"4.4rem\",\r\n    height: \"4.629rem\",\r\n  },\r\n  abcText: {\r\n    fontFamily: \"sans-serif\",\r\n    fontSize: \"3.5rem\",\r\n    fontWeight: \"bold\",\r\n    marginLeft: \"0.5rem\",\r\n  },\r\n\r\n  mainHeader: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: \"#ffffff\",\r\n    fontSize: \"2rem\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(3, 1fr)\",\r\n    padding: \"2rem 2.5rem\",\r\n    // backgroundColor: \"#c9099f\",\r\n  },\r\n  mainGridPanel: {\r\n    padding: \"0rem 2.5rem 2.5rem 2.5rem\",\r\n    display: \" grid\",\r\n    gridTemplateRows: \"5% 95%\",\r\n    // backgroundColor: \"#d38c07\",\r\n  },\r\n  gridHeader: {\r\n    fontSize: \"2.8rem\",\r\n    fontFamily: \"Ubuntu\",\r\n    padding: \"0rem\",\r\n    color: \"#ffffff\",\r\n    // backgroundColor: \"#27e751\",\r\n  },\r\n  gridPanelArea: {\r\n    borderRadius: \"1rem\",\r\n    padding: \"3rem\",\r\n    backgroundColor: \"#273D49CC\",\r\n    // display: \"flex\",\r\n    // flexDirection: \" column\",\r\n    display: \"grid\",\r\n    gridTemplateRows: \"10% 90%\",\r\n  },\r\n  gridMenu: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    // padding: \"2.5rem\",\r\n  },\r\n  tableContainer: {},\r\n  invoiceTable: {},\r\n}));\r\n\r\nconst LandingPage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.mainHeader}>\r\n        <div className={classes.abcContainer}>\r\n          <img src={abcLogo} className={classes.abcLogo} />\r\n          <div className={classes.abcText}>ABC Products</div>\r\n        </div>\r\n        <div className={classes.hrcContainer}>\r\n          <img src={hrcLogo} className={classes.hrcLogo} />\r\n        </div>\r\n      </div>\r\n      <div className={classes.mainGridPanel}>\r\n        <div className={classes.gridHeader}>Invoice List</div>\r\n\r\n        <Paper className={classes.gridPanelArea} elevation={0}>\r\n          <div className={classes.gridMenu}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\"\r\n              spacing={2}\r\n            >\r\n              <Grid item>\r\n                <PredictBtn />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-end\"\r\n              alignItems=\"flex-start\"\r\n              className={classes.menuRight}\r\n              spacing={2}\r\n            >\r\n              <Grid item>\r\n                <AddBtn />\r\n              </Grid>\r\n              <Grid item>\r\n                <EditBtn />\r\n              </Grid>\r\n              <Grid item>\r\n                <DeleteBtn />\r\n              </Grid>\r\n              <Grid item>\r\n                <SearchBar />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div className={classes.tableContainer}>\r\n            <MainTable className={classes.invoiceTable} />\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\reducers\\rowStore.js",[],"C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\AddBtn.js",["77"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles, createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\r\nimport {pxToRem} from '../utils/theme';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {InputLabel } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport './Addbtn.css'\r\nimport {callAddInvoice} from '../services/services'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {getSearch, changeRow, startCount} from '../actions/rowAction';\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    add:{\r\n        height:pxToRem(43),\r\n        width: pxToRem(99),\r\n        fontSize: pxToRem(20),\r\n        border:`${pxToRem(1)} solid #14AFF1`,\r\n        borderRadius: pxToRem(10),\r\n        color:'#FFFFFF',        \r\n        textTransform:'none',\r\n        minWidth:pxToRem(99),\r\n        padding: `${pxToRem(11)} ${pxToRem(18)}`,        \r\n        },\r\n    icon:{\r\n        height:pxToRem(20),\r\n        width:pxToRem(20)               \r\n    },\r\n    startIcon:{\r\n        margin:`0 ${pxToRem(5)} 0 ${pxToRem(-5)}`,\r\n        padding:'0'\r\n    },\r\n    inputFields:{\r\n      direction:'flex'\r\n    },\r\n    addModal:{\r\n        minWidth:pxToRem(1206),\r\n        maxWidth:pxToRem(1206),\r\n        minHeight:pxToRem(509),\r\n        backgroundColor:'#2A3E4C',\r\n        borderRadius:pxToRem(10),\r\n        boxShadow:'none' ,\r\n        margin:0  \r\n    },\r\n    title:{\r\n        borderBottom:`${pxToRem(1)} solid #1A262F`,\r\n        padding:pxToRem(30),\r\n        color:'white'\r\n    },\r\n    left:{\r\n        display:'flex',\r\n        flexDirection:'column'   \r\n    },\r\n    right:{\r\n        display:'flex',        \r\n        flexDirection:'column',\r\n        paddingLeft:pxToRem(80)        \r\n    },\r\n    container:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        padding:`${pxToRem(30)} ${pxToRem(30)} 0  ${pxToRem(30)}`,\r\n        borderBottom:`${pxToRem(1)} solid #1A262F`,\r\n        overflow:\"hidden\"\r\n    },\r\n    fieldContainer:{\r\n        display:'flex',\r\n        flexDirection:'row',      \r\n        paddingBottom:pxToRem(28)\r\n    },\r\n    input: {\r\n        padding:`0 ${pxToRem(15)}`,       \r\n        width:pxToRem(300),\r\n        height:pxToRem(45),\r\n        color:'#FFFFFF',\r\n        fontSize: pxToRem(16),\r\n        letterSpacing: pxToRem(1),\r\n        borderRadius:pxToRem(10),\r\n        backgroundColor:'#283A46',\r\n        border:`${pxToRem(1)} solid #356680`\r\n      },\r\n      textArea:{\r\n        padding:`0 ${pxToRem(15)}`,       \r\n        width:pxToRem(300),\r\n        minHeight:pxToRem(195),\r\n        maxHeight:pxToRem(195),\r\n        color:'#FFFFFF',\r\n        fontSize: pxToRem(20),\r\n        border:`${pxToRem(1)} solid #356680`,\r\n        borderRadius:pxToRem(10),\r\n        backgroundColor:'#283A46',\r\n        \r\n      },  \r\n      multiline:{\r\n          padding:0,\r\n          \r\n      },\r\n    labels:{        \r\n        width:pxToRem(185),\r\n        paddingTop:pxToRem(10),\r\n        paddingRight:pxToRem(15),\r\n        fontSize:pxToRem(20),\r\n        color:'#97A1A9'\r\n    },\r\n    footer:{\r\n        display:'flex',\r\n        justifyContent:'space-between',\r\n        padding:`${pxToRem(25)} ${pxToRem(30)}`\r\n    },\r\n    cancel:{\r\n        padding:0,\r\n        marginLeft:pxToRem(20),\r\n        color:'#14AFF1',\r\n        minWidth:pxToRem(77),\r\n        height:pxToRem(45),\r\n        textTransform:'none',\r\n        fontSize:pxToRem(20),\r\n        border: \"none\",\r\n    },\r\n\r\n    footerAdd:{\r\n        padding:0,\r\n        color:'#FFFFFF',\r\n        backgroundColor:'#14AFF1',\r\n        border:`${pxToRem(1)} solid #14AFF1`,\r\n        borderRadius:pxToRem(10),\r\n        minWidth:pxToRem(77),\r\n        height:pxToRem(45),\r\n        marginLeft:`${pxToRem(30)}`,\r\n        textTransform:'none',\r\n        fontSize:pxToRem(20)\r\n    },\r\n    clear:{\r\n        padding:'0 0',\r\n        border:`${pxToRem(1)} solid #14AFF1`,\r\n        color:'#FFFFFF',\r\n        minWidth:pxToRem(87),\r\n        height:pxToRem(45),\r\n        textTransform:'none',        \r\n        borderRadius:pxToRem(10),\r\n        fontSize:pxToRem(20),\r\n        borderColor:'#14AFF1'\r\n    },\r\n    iconButton: {\r\n        padding:0,\r\n        float:'right'    \r\n      },\r\n    closeIcon: {\r\n          color:'#97A1A9',\r\n          fontSize: pxToRem(24)\r\n      },\r\n    span:{\r\n        color:\"#FF5B5B\"\r\n    }\r\n})\r\n\r\nfunction AddButton() {\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const [details, setDetails] = React.useState({});\r\n    const [nameCustomer, setNameCustomer] = React.useState(\"\");\r\n    const [numberCustomer, setNumberCustomer] = React.useState(\"\");\r\n    const [invoiceNumber, setInvoiceNumber] = React.useState(\"\");\r\n    const [openAmount, setOpenAmount] = React.useState(\"\");\r\n    const [dueInDate, setDueInDate] = React.useState(\"\");\r\n    const [note, setNote] = React.useState(\"\");\r\n    const [snackOpen, setSnackOpen] = React.useState(false);\r\n\r\n    const dispatch = useDispatch();  \r\n\r\n    const setPage = data => dispatch(startCount(data))\r\n    const setRows = data => dispatch(changeRow(data));\r\n    const setSearch = data => dispatch(getSearch(data));\r\n\r\n    const defaultTheme = createMuiTheme();\r\n\r\n    const theme = createMuiTheme({\r\n      overrides: {\r\n        MuiInput: {\r\n            input: {\r\n                padding:`0 ${pxToRem(15)}`,       \r\n                width:pxToRem(300),\r\n                height:pxToRem(45),\r\n                color:'#FFFFFF',\r\n                fontSize: pxToRem(16),\r\n                letterSpacing: pxToRem(1),\r\n                borderRadius:pxToRem(10),\r\n                backgroundColor:'#283A46',\r\n                border:`${pxToRem(1)} solid #356680`\r\n            },\r\n            inputMultiline: {\r\n                padding:`15px ${pxToRem(15)}`,       \r\n                width:pxToRem(300),\r\n                height:pxToRem(125),\r\n                color:'#FFFFFF',\r\n                fontSize: pxToRem(16),\r\n                letterSpacing: pxToRem(1),\r\n                borderRadius:pxToRem(10),\r\n                backgroundColor:'#283A46',\r\n                border:`${pxToRem(1)} solid #356680`\r\n            },\r\n            underline: {\r\n                \"&&&:before\": {\r\n                  borderBottom: \"none\"\r\n                },\r\n                \"&&:after\": {\r\n                  borderBottom: \"none\"\r\n                }\r\n            }\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n    const handleSubmit = () => {\r\n        \r\n\r\n        var result = Object.keys(details).find(key=> (details[key] === '' ||\r\n        details[key] === null))\r\n\r\n        if( Object.keys(details).length < 5 || result !== undefined){\r\n                console.log(\"add has problems\")\r\n                setSnackOpen(true);\r\n            }\r\n        \r\n        else{\r\n\r\n            var today = new Date()\r\n            const date = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();\r\n            console.log(date)\r\n\r\n            details.docCreateDate = `${date}`\r\n            console.log(details)\r\n\r\n            callAddInvoice(details)\r\n            .then(function (response) {\r\n                console.log(response)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            })\r\n\r\n            setPage(0)\r\n            setRows([])\r\n            setSearch(details.docID)\r\n            setDetails({})\r\n            setOpen(false)\r\n            setSnackOpen(false)\r\n        }\r\n        \r\n    }    \r\n\r\n\r\n    const handleClickOpen = () => {\r\n    setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n    setOpen(false);\r\n\r\n    };\r\n\r\n    const handleClear = () =>{\r\n        setDetails({})\r\n        setDueInDate(\"\")\r\n        setInvoiceNumber(\"\")\r\n        setNameCustomer(\"\")\r\n        setNote(\"\")\r\n        setNumberCustomer(\"\")\r\n        setOpenAmount(\"\")\r\n    }\r\n\r\n    const closeSnack = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setSnackOpen(false);\r\n      };\r\n  \r\n    const classes = useStyles();\r\n    return (\r\n        <MuiThemeProvider theme={defaultTheme}>\r\n        <div>\r\n            <Button variant=\"outlined\" classes={{root:classes.add,startIcon:classes.startIcon}} onClick={handleClickOpen} startIcon={<AddIcon className={classes.icon}/>}>                Add\r\n            </Button>\r\n                <Dialog                    \r\n                    open={open}            \r\n                    aria-labelledby=\"responsive-dialog-title\" classes={{paper:classes.addModal}}\r\n                >\r\n                <DialogTitle className={classes.title} id=\"responsive-dialog-title\"><span style={{fontSize: pxToRem(20)}}>Add Invoice</span> \r\n                <IconButton onClick={handleClose} className={classes.iconButton} aria-label=\"search\">\r\n                    <CloseIcon className={classes.closeIcon}  />\r\n                </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent className={classes.container} >                    \r\n                    <div className={classes.left}>\r\n                        <div className={classes.fieldContainer}>\r\n                            <InputLabel className={classes.labels}>Customer Name <span className={classes.span}>*</span></InputLabel>\r\n                           <MuiThemeProvider theme={theme}>\r\n                            <TextField  id = \"custName\" value={nameCustomer}\r\n                                onChange={e => {setDetails({...details,custName:e.target.value})\r\n                                                setNameCustomer(e.target.value)}}\r\n                                required\r\n                                />\r\n                            </MuiThemeProvider>\r\n                        </div>\r\n\r\n                        <div className={classes.fieldContainer}>\r\n                            <InputLabel className={classes.labels}>Customer No. <span className={classes.span}>*</span></InputLabel>\r\n                            <MuiThemeProvider theme={theme}>\r\n                            <TextField value={numberCustomer}\r\n                                onChange={e => {setDetails({...details,custID:e.target.value})\r\n                                                setNumberCustomer(e.target.value)}} \r\n                                required/>\r\n                            </MuiThemeProvider>\r\n                        </div>\r\n\r\n                        <div className={classes.fieldContainer}>\r\n                            <InputLabel className={classes.labels}>Invoice No. <span className={classes.span}>*</span></InputLabel>\r\n                            <MuiThemeProvider theme={theme}>\r\n                            <TextField value={invoiceNumber}\r\n                                onChange={e => {setDetails({...details,docID:e.target.value})\r\n                                                setInvoiceNumber(e.target.value)}}\r\n                                required />\r\n                            </MuiThemeProvider>\r\n                        </div>\r\n\r\n                        <div className={classes.fieldContainer}>\r\n                            <InputLabel className={classes.labels}>Invoice Amount <span className={classes.span}>*</span></InputLabel>\r\n                            <MuiThemeProvider theme={theme}>\r\n                            <TextField value={openAmount}\r\n                                onChange={e => {setDetails({...details,invoiceAmount:e.target.value})\r\n                                                setOpenAmount(e.target.value)}}\r\n                                required\r\n                                />\r\n                            </MuiThemeProvider>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className={classes.right}>\r\n                    <div className={classes.fieldContainer}>\r\n                        <InputLabel  className={classes.labels}>Due Date <span className={classes.span}>*</span></InputLabel>\r\n                        <MuiThemeProvider theme={theme}>\r\n                        <TextField type=\"date\" value={dueInDate}\r\n                            onChange={e => {setDetails({...details,dueDate:e.target.value})                        \r\n                                            setDueInDate(e.target.value)}}\r\n                            required />\r\n                        </MuiThemeProvider>\r\n                    </div>\r\n                    \r\n                    <div className={classes.fieldContainer}>\r\n                        <InputLabel className={classes.labels}>Notes</InputLabel>\r\n                        <MuiThemeProvider theme={theme}>\r\n                        <TextField multiline rows={25} value={note}\r\n                            onChange={e => {setDetails({...details,notes:e.target.value})\r\n                                            setNote(e.target.value)}}/>\r\n                        </MuiThemeProvider>\r\n                        </div>\r\n                    </div>  \r\n                                 \r\n                                            \r\n                </DialogContent> \r\n                <DialogActions classes={{root:classes.footer}} >\r\n                    <Button  variant=\"outlined\" classes={{root:classes.cancel}} onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>                    \r\n                <div >  \r\n                <Button variant=\"outlined\"   classes={{root:classes.clear}} onClick={handleClear}>\r\n                        Clear\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\" disableElevation onClick={handleSubmit} classes={{root:classes.footerAdd}} >\r\n                        Add\r\n                    </Button>\r\n                    <Snackbar open={snackOpen} autoHideDuration={6000} onClose={closeSnack}>\r\n                        hello!\r\n                    </Snackbar>                    \r\n                </div>    \r\n                </DialogActions>\r\n            </Dialog>\r\n            \r\n    </div>\r\n    </MuiThemeProvider>\r\n    )\r\n}\r\n\r\nexport default AddButton\r\n","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\DeleteBtn.js",[],"C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\EditBtn.js",[],"C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\PredictBtn.js",["78"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {changeRow, selectRow} from '../actions/rowAction'\r\nimport {callPredict} from '../services/services'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  btn: {\r\n    fontSize: \"2rem\",\r\n    padding: \"0.3rem 1.5rem\",\r\n    color: \"#FFFFFF\",\r\n    backgroundColor: \"#14AFF1\",\r\n    textTransform: \"capitalize\",\r\n    border: \"0.1rem solid #14AFF1\",\r\n    borderRadius: \"1rem\",\r\n    fontFamily: \"Ubuntu\",\r\n\r\n    \"&:hover\": {\r\n      color: \"#FFFFFF\",\r\n      backgroundColor: \"#14AFF1\",\r\n    },\r\n  },\r\n\r\n  btnDisabled: {\r\n    fontSize: \"2rem\",\r\n    padding: \"0.3rem 1.5rem\",\r\n    color: \"#FFFFFF\",\r\n    backgroundColor: \"#97A1A9\",\r\n    textTransform: \"capitalize\",\r\n    border: \"0.1rem solid #97A1A9\",\r\n    borderRadius: \"1rem\",\r\n    fontFamily: \"Ubuntu\",\r\n  }\r\n}));\r\nconst PredictBtn = () => {\r\n  const [isActive, setIsActive] = React.useState(false);\r\n  const selected = useSelector((state) => state.selectedRows);\r\n  const row = useSelector((state) => state.rows)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setRow = (data) => dispatch(changeRow(data))\r\n  const setSelected = (data) => dispatch(selectRow(data))\r\n\r\n  React.useEffect(()=>{\r\n    if (selected !== []){\r\n      setIsActive(true);\r\n    }\r\n  }, [selected])\r\n\r\n  const onClick = () => {\r\n    callPredict(selected)\r\n    .then((res) => {\r\n      console.log(res.data.resData);\r\n\r\n      let newRow = row.map(rowElement  => { \r\n        let idx = res.data.resData.findIndex(resElement => resElement.docID === rowElement.docID) \r\n        console.log(idx)\r\n        if(idx!=-1){\r\n          rowElement.predDate = res.data.resData[idx].predictedDate\r\n          rowElement.agingBucket = res.data.resData[idx].predAgingBucket\r\n        }\r\n\r\n        return rowElement\r\n      });\r\n\r\n      setRow(newRow)\r\n      setSelected([])\r\n    })\r\n    .catch((err) => console.log(err));\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\" className={isActive===true? classes.btn: classes.btnDisabled} disableElevation onClick={onClick}>\r\n        Predict\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictBtn;\r\n","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\SearchBar.js",["79","80","81"],"import React, { useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { callInfiniteScroll } from \"../services/services\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {getSearch, moreData, changeRow, startCount, visited} from '../actions/rowAction';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  inputHolder: {\r\n    color: \"#FFFFFF\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"20px\",\r\n    backgroundColor: \"#283A46\",\r\n    textTransform: \"capitalize\",\r\n    border: \"0.1rem solid #356680\",\r\n    borderRadius: \"1rem\",\r\n    padding: \"0.2rem 1.5rem 0.2rem 1.5rem\"\r\n  },\r\n  search: {\r\n    fontSize: \"2.5rem\",\r\n    color: \"#c6ced4\",\r\n    padding: \"0rem\",\r\n  },\r\n  input: {\r\n    fontSize: \"20px\",\r\n    color: \"#c6ced4\",\r\n    padding: \"0rem\",\r\n    fontFamily: \"Ubuntu\",\r\n  },\r\n}));\r\n\r\nconst SearchBar = (props) => {\r\n    const classes = useStyles();\r\n    const searchVal = useSelector((state) => state.searchVal)\r\n    const page =  useSelector((state) => state.count)\r\n    const rows = useSelector((state) => state.rows);\r\n    const sortOrder = useSelector((state) => state.sortOrder);\r\n    const sortBy = useSelector((state) => state.sortBy);\r\n    \r\n    const dispatch = useDispatch();  \r\n\r\n    const setPage = data => dispatch(startCount(data))\r\n    const setRows = data => dispatch(changeRow(data));\r\n    const setSearch = data => dispatch(getSearch(data));\r\n    const setHasMore = data => dispatch(moreData(data))\r\n    const setVisited = data => dispatch(visited(data))\r\n\r\n    const { disabled } = props;\r\n\r\n    useEffect(() => {\r\n      console.log(\"starting useEffect()\");\r\n      console.log(rows);\r\n      console.log(searchVal)\r\n      callInfiniteScroll(page, searchVal, sortOrder, sortBy)\r\n        .then((res) => {\r\n          setRows([...rows, ...res.data.resData]);\r\n          setHasMore(true);\r\n          console.log(res.data.resData);\r\n          console.log(\"ending useEffect()\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }, [page, searchVal, sortOrder, sortBy]);\r\n\r\n    const onChange = (event) => {\r\n      setSearch(event.target.value)\r\n      setRows([])\r\n      setPage(0)\r\n      setVisited(false)\r\n      console.log(event.target.value);\r\n    };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper component=\"form\" className={classes.inputHolder} elevation={0}>\r\n        <div style={{display: \"flex\"}}>\r\n          <InputBase\r\n            className={classes.input}\r\n            placeholder=\"Search by Invoice Number\"\r\n            disabled={disabled}\r\n            onChange={onChange}\r\n            value={searchVal}\r\n            onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }}\r\n            style={{paddingTop: \"0\"}}\r\n          />\r\n          <SearchIcon className={classes.search} style={{marginTop: \"6px\"}}/>\r\n        </div>\r\n          \r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\components\\MainTable.js",["82","83","84"],"import React, { useEffect} from 'react';\r\nimport { makeStyles, createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { callInfiniteScroll } from \"../services/services\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { formatter } from \"../utils/formatter\";\r\nimport {changeRow, selectRow, startCount, moreData, doSort, orderBy, getData, visited} from '../actions/rowAction';\r\nimport \"./table.css\";\r\n\r\nconst headCells = [\r\n  { id: 'custName', width: \"10%\", label: 'Customer Name' },\r\n  { id: 'custID', width: \"10%\",label: 'Customer #' },\r\n  { id: 'docID',  width: \"10%\",label: 'Invoice #' },\r\n  { id: 'invoiceAmount', width: \"10%\",label: 'Invoice Amount' },\r\n  { id: 'dueDate', width: \"10%\",label: 'Due Date' },\r\n  { id: 'predDate',width: \"17%\",label: 'Predicted Payment Date'},\r\n  { id: 'agingBucket',width: \"16%\",label: 'Predicted Aging Bucket'},\r\n  { id: 'Notes',width: \"11%\",label: 'Notes'},\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, numSelected, rowCount} = props;\r\n\r\n  const sortOrder = useSelector((state) => state.sortOrder);\r\n  const sortBy = useSelector((state) => state.sortBy);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setSortOrder = data => dispatch(doSort(data));\r\n  const setSortBy = data => dispatch(orderBy(data));\r\n  const setRows = data => dispatch(changeRow(data));\r\n  const setCount = data => dispatch(startCount(data));\r\n  \r\n  const onClickInvoiceAmount = () => {\r\n\r\n      setRows([])\r\n      setCount(0)\r\n\r\n      if (sortBy === \"dueDate\" && sortOrder===1){\r\n        setSortBy(\"invoiceAmount\")\r\n        console.log(\"changed\")\r\n        console.log(\"sort order:\" + sortOrder)\r\n      }\r\n\r\n      else if (sortBy === \"dueDate\" && sortOrder===2){\r\n\r\n        setSortBy(\"invoiceAmount\")\r\n        setSortOrder(1)\r\n        console.log(\"sort order:\" + sortOrder)\r\n      }\r\n\r\n      else{\r\n\r\n        setSortBy(\"invoiceAmount\")\r\n        console.log(\"sort order:\" + sortOrder)\r\n\r\n        if(sortOrder === 0){\r\n          setSortOrder(1)\r\n        }\r\n        else if (sortOrder === 1){\r\n          setSortOrder(2)\r\n        }\r\n        else{\r\n          setSortOrder(0)\r\n          setSortBy(\"\")\r\n        }\r\n    }\r\n    \r\n  }\r\n\r\n  const onClickDueDate = () => {\r\n\r\n    setRows([])\r\n    setCount(0)\r\n\r\n    if (sortBy === \"invoiceAmount\" && sortOrder===1){\r\n      setSortBy(\"dueDate\")\r\n      console.log(\"changed\")\r\n      console.log(\"sort order:\" + sortOrder)\r\n    }\r\n\r\n    else if (sortBy === \"invoiceAmount\" && sortOrder===2){\r\n\r\n      setSortBy(\"dueDate\")\r\n      setSortOrder(1)\r\n      console.log(\"sort order:\" + sortOrder)\r\n    }\r\n\r\n    else{\r\n\r\n      setSortBy(\"dueDate\")\r\n      console.log(\"sort order:\" + sortOrder)\r\n\r\n      if(sortOrder === 0){\r\n        setSortOrder(1)\r\n      }\r\n      else if (sortOrder === 1){\r\n        setSortOrder(2)\r\n      }\r\n      else{\r\n        setSortOrder(0)\r\n        setSortBy(\"\")\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <TableHead>\r\n      <TableRow id = \"titles\">\r\n        <TableCell padding=\"checkbox\" style={{width: \"3%\"}}>\r\n          <Checkbox\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            style={{color:'#97a1a9', padding:'0 0 0 4px', transform: \"scale(1.4)\"}}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align='left'\r\n            style={(()=>{\r\n              if (headCell.id === 'predDate'){\r\n                return(\r\n                  {padding: '16px 45px 16px 0', width:headCell.width}\r\n                )\r\n              }\r\n              else if (headCell.id === 'agingBucket'){\r\n                return(\r\n                  {padding: '16px 0 16px 45px', width:headCell.width}\r\n                )\r\n              }\r\n              else{\r\n                return(\r\n                  {padding: '16px 0 16px 0', width:headCell.width}\r\n                )\r\n              }\r\n            })()}\r\n           >\r\n           {(() => {\r\n             if (headCell.id === 'invoiceAmount'){\r\n               return(\r\n                  <a style ={{display: \"flex\", justifyContent:\"flex-end\"}} onClick={onClickInvoiceAmount}><span style={{paddingTop: \"8px\"}}>{headCell.label}</span> {\r\n                    (() =>{\r\n                      if(sortOrder === 1 && sortBy === \"invoiceAmount\"){\r\n                        return(\r\n                          <span>\r\n                            <p style={{marginTop: \"0px\", paddingLeft:\"2px\"}}><ArrowDropUpIcon style={{fontSize:\"22px\", color: \"white\"}}/></p>\r\n                            <p style={{marginTop: \"-16px\", paddingLeft:\"2px\"}}><ArrowDropDownIcon style={{fontSize:\"22px\", color: \"#727a82\"}}/></p>\r\n                          </span>\r\n                        )\r\n                      }\r\n                      else if (sortOrder === 2 && sortBy === \"invoiceAmount\"){\r\n                        return(\r\n                          <span>\r\n                            <p style={{marginTop: \"0px\", paddingLeft:\"2px\"}}><ArrowDropUpIcon style={{fontSize:\"22px\", color: \"#727a82\"}}/></p>\r\n                            <p style={{marginTop: \"-16px\", paddingLeft:\"2px\"}}><ArrowDropDownIcon style={{fontSize:\"22px\", color: \"white\"}}/></p>\r\n                          </span>\r\n                          )\r\n                      }\r\n                      else{\r\n                        return(\r\n                          <span>\r\n                            <p style={{marginTop: \"0px\", paddingLeft:\"2px\"}}><ArrowDropUpIcon style={{fontSize:\"22px\", color: \"#727a82\"}}/></p>\r\n                            <p style={{marginTop: \"-16px\", paddingLeft:\"2px\"}}><ArrowDropDownIcon style={{fontSize:\"22px\", color: \"#727a82\"}}/></p>\r\n                          </span>\r\n                        )\r\n                      }\r\n                    })()\r\n                  }</a>\r\n               )\r\n             }\r\n             else if (headCell.id === 'dueDate'){\r\n               return(\r\n                 <a style ={{display: \"flex\", justifyContent: \"flex-end\"}} onClick = {onClickDueDate}><span style={{paddingTop: \"8px\"}}>{headCell.label}</span> {\r\n                  (() =>{\r\n                     if(sortOrder === 1 && sortBy === \"dueDate\"){\r\n                       return(\r\n                          <span>\r\n                            <p style={{marginTop: \"0px\", paddingLeft:\"2px\"}}><ArrowDropUpIcon style={{fontSize:\"22px\", color: \"white\"}}/></p>\r\n                            <p style={{marginTop: \"-16px\", paddingLeft:\"2px\"}}><ArrowDropDownIcon style={{fontSize:\"22px\", color: \"#727a82\"}}/></p>\r\n                          </span>\r\n                       )\r\n                     }\r\n                     else if (sortOrder === 2 && sortBy === \"dueDate\"){\r\n                       return(\r\n                          <span>\r\n                            <p style={{marginTop: \"0px\", paddingLeft:\"2px\"}}><ArrowDropUpIcon style={{fontSize:\"22px\", color: \"#727a82\"}}/></p>\r\n                            <p style={{marginTop: \"-16px\", paddingLeft:\"2px\"}}><ArrowDropDownIcon style={{fontSize:\"22px\", color: \"white\"}}/></p>\r\n                          </span>\r\n                       )\r\n                     }\r\n                     else{\r\n                       return(\r\n                          <span>\r\n                            <p style={{marginTop: \"0px\", paddingLeft:\"2px\"}}><ArrowDropUpIcon style={{fontSize:\"22px\", color: \"#727a82\"}}/></p>\r\n                            <p style={{marginTop: \"-16px\", paddingLeft:\"2px\"}}><ArrowDropDownIcon style={{fontSize:\"22px\", color: \"#727a82\"}}/></p>\r\n                          </span>\r\n                       )\r\n                     }\r\n                   })()\r\n                 }</a>\r\n               )\r\n             }\r\n             else if(headCell.id === \"predDate\"){\r\n                 return(\r\n                   <div style={{textAlign: \"right\"}}>{headCell.label}</div>\r\n                 )\r\n             }\r\n             else{\r\n                return(\r\n                  headCell.label\r\n                )\r\n               }\r\n             }\r\n           )()}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n\r\n  const page =  useSelector((state) => state.count)\r\n  const rows = useSelector((state) => state.rows);\r\n  const selected = useSelector((state) => state.selectedRows);\r\n  const searchVal = useSelector((state) => state.searchVal);\r\n  const hasMore = useSelector((state) => state.hasMore);\r\n  const sortOrder = useSelector((state) => state.sortOrder);\r\n  const sortBy = useSelector((state) => state.sortBy);\r\n  const gotData = useSelector((state) => state.gotData);\r\n  const visit = useSelector((state) => state.visited);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setRows = data => dispatch(changeRow(data));\r\n  const setSelected = data => dispatch(selectRow(data));\r\n  const setPage = data => dispatch(startCount(data));\r\n  const setHasMore = data => dispatch(moreData(data));\r\n  const setGotData = data =>dispatch(getData(data));\r\n  const setVisited = data => dispatch(visited(data))\r\n\r\n  useEffect(() => {\r\n    console.log(\"starting useEffect()\");\r\n    console.log(rows);\r\n    console.log(searchVal)\r\n    callInfiniteScroll(page, searchVal, sortOrder, sortBy)\r\n      .then((res) => {\r\n        setRows([...rows, ...res.data.resData]);\r\n        setHasMore(true)\r\n        setGotData(true)\r\n        if((res.data.resData.length === 0 && visit === false)|| isNaN(searchVal)){\r\n          console.log(\"No data available!\")\r\n          setGotData(false)\r\n        }\r\n        if (res.data.resData.length < 20){\r\n          console.log(\"rows over!\")\r\n          setHasMore(false)\r\n        }\r\n        if(res.data.resData.length > 0){\r\n          setVisited(true)\r\n        }\r\n        console.log(res.data.resData);\r\n        console.log(\"ending useEffect()\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [page, searchVal, sortOrder, sortBy]);\r\n\r\n\r\n  const fetchMoreData = () => {\r\n    setPage(page + 20)\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      setSelected([...rows]);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, row) => {\r\n    const selectedIndex = selected.findIndex(element => element.docID === row.docID);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, row);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const isSelected = (row) => selected.findIndex(element => element.docID === row.docID) !== -1;\r\n\r\n  const defaultTheme = createMuiTheme();\r\n\r\n  const theme = createMuiTheme({\r\n    overrides: {\r\n      MuiTooltip: {\r\n        tooltip: {\r\n          fontSize: \"1.5rem\",\r\n          color: \"white\",\r\n          backgroundColor: \"#202020\"\r\n        },\r\n\r\n        tooltipPlacementRight: {\r\n          margin: \"0 50px 0 -50px\",\r\n          \"@media (min-width: 600px)\":{\r\n            margin: \"70px 150px 0 -150px\"\r\n          }\r\n        },\r\n\r\n        tooltipPlacementBottom: {\r\n          margin: \"0 50px 0 -50px\",\r\n          \"@media (min-width: 600px)\":{\r\n            margin: \"-15px -60px 0 60px\"\r\n          }\r\n        },\r\n      }\r\n    }\r\n});\r\n\r\n  const theme2 = createMuiTheme({\r\n    overrides: {\r\n      MuiSvgIcon: {\r\n        root: {\r\n          fontSize: \"150px\",\r\n          color: \"#ec3838a6\",\r\n          paddingTop:\"14rem\",\r\n        }\r\n      },\r\n\r\n      MuiCircularProgress: {\r\n        colorPrimary: {\r\n          color: \"#14AFF1\",\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  const emptyData = () => {\r\n\r\n    if(gotData === false){\r\n      return(\r\n        <MuiThemeProvider theme={theme2}>\r\n        <div style={{textAlign: \"center\"}}>\r\n          <ErrorOutlineOutlinedIcon />\r\n          <p style={{color: \"#c5ced6\", fontSize:\"2rem\", paddingTop:\"2rem\"}}>No results found for your query!</p>\r\n        </div>\r\n        </MuiThemeProvider>\r\n      );\r\n    }\r\n\r\n    else{\r\n      return(\r\n        <MuiThemeProvider theme={defaultTheme}>\r\n\r\n          <InfiniteScroll\r\n              dataLength={rows.length}\r\n              scrollableTarget=\"scrollableTableBody\"\r\n              next={fetchMoreData}\r\n              hasMore={hasMore}\r\n              style={{overflow:\"unset\"}}\r\n              loader={\r\n                <div\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  <MuiThemeProvider theme={theme2}>\r\n                  <CircularProgress\r\n                    color = \"primary\"\r\n                    style={{ fontSize: \"10px\" }}\r\n                  />\r\n                  </MuiThemeProvider>\r\n                </div>\r\n              }\r\n            >\r\n            <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n            stickyHeader\r\n            style={{padding: 0}} \r\n          >\r\n          <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              rowCount = {rows.length}\r\n              onSelectAllClick={handleSelectAllClick}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                  const isItemSelected = isSelected(row);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                      id=\"data\"\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                          style = {{color: '#97a1a9', transform: \"scale(1.4)\" }}\r\n                        />\r\n                      </TableCell>\r\n\r\n                      <MuiThemeProvider theme={theme}>\r\n                        <Tooltip title={row.custName} placement=\"right\">\r\n                          <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\" style={{maxWidth:\"100px\", overflow: \"hidden\", paddingRight:\"48px\", margin: \"0\", whiteSpace: \"nowrap\", textOverflow:\"ellipsis\"}}>\r\n                          {row.custName?row.custName:\"---\"}\r\n                          </TableCell>\r\n                        </Tooltip>\r\n                      </MuiThemeProvider>\r\n                      \r\n                      <TableCell style={{margin: \"0\"}}>{row.custID?row.custID:\"--\"}</TableCell>\r\n                      <TableCell style={{margin: \"0\"}}>{row.docID}</TableCell>\r\n                      <TableCell style={{textAlign:\"right\", paddingRight: \"12px\"}}>{formatter(row.invoiceAmount)}</TableCell>\r\n                      <TableCell style={{textAlign:\"right\", paddingRight: \"6px\"}}>{row.dueDate?row.dueDate:\"--\"}</TableCell>\r\n                      <TableCell style={{textAlign:\"right\", paddingRight:\"45px\"}}>{row.predDate?row.predDate:\"--\"}</TableCell>\r\n                      <TableCell style={{paddingLeft: \"45px\"}}>{row.agingBucket?row.agingBucket:\"--\"}</TableCell>\r\n                      \r\n                      <MuiThemeProvider theme={theme}>\r\n                        <Tooltip title={row.notes} placement=\"bottom\">\r\n                          <TableCell style={{maxWidth:\"150px\", overflow: \"hidden\", paddingRight:\"12px\", margin: \"0\", whiteSpace: \"nowrap\", textOverflow:\"ellipsis\"}}>{row.notes?row.notes:\"--\"}</TableCell>\r\n                        </Tooltip>\r\n                      </MuiThemeProvider>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n          </InfiniteScroll>\r\n\r\n\r\n        </MuiThemeProvider>\r\n\r\n      );\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper} id=\"paper\">\r\n        <TableContainer id=\"scrollableTableBody\">\r\n          {emptyData()}\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\utils\\formatter.js",[],"C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\services\\services.js",[],"C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\actions\\rowAction.js",[],"C:\\Users\\subha\\Desktop\\H2H Bill Management\\Summer_Internship_UI\\src\\utils\\constants.js",[],{"ruleId":"85","severity":1,"message":"86","line":6,"column":10,"nodeType":"87","messageId":"88","endLine":6,"endColumn":18},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":48,"column":5,"nodeType":"92","messageId":"93","endLine":48,"endColumn":12},{"ruleId":"94","severity":1,"message":"95","line":89,"column":11,"nodeType":"96","endLine":89,"endColumn":60},{"ruleId":"94","severity":1,"message":"95","line":93,"column":11,"nodeType":"96","endLine":93,"endColumn":60},{"ruleId":"85","severity":1,"message":"97","line":16,"column":10,"nodeType":"87","messageId":"88","endLine":16,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":63,"column":15,"nodeType":"100","messageId":"93","endLine":63,"endColumn":17},{"ruleId":"85","severity":1,"message":"101","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":18},{"ruleId":"90","severity":1,"message":"102","line":20,"column":5,"nodeType":"92","messageId":"93","endLine":20,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":68,"column":8,"nodeType":"105","endLine":68,"endColumn":44,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":156,"column":19,"nodeType":"96","endLine":156,"endColumn":107},{"ruleId":"107","severity":1,"message":"108","line":188,"column":18,"nodeType":"96","endLine":188,"endColumn":103},{"ruleId":"103","severity":1,"message":"109","line":295,"column":6,"nodeType":"105","endLine":295,"endColumn":42,"suggestions":"110"},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useSelector' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'IconButton' is defined but never used.","Duplicate key 'textTransform'.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'rows', 'setHasMore', and 'setRows'. Either include them or remove the dependency array.","ArrayExpression",["111"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'rows', 'setGotData', 'setHasMore', 'setRows', 'setVisited', and 'visit'. Either include them or remove the dependency array.",["112"],{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [page, searchVal, sortOrder, sortBy, rows, setRows, setHasMore]",{"range":"117","text":"118"},"Update the dependencies array to be: [page, searchVal, sortOrder, sortBy, rows, setRows, setHasMore, setGotData, visit, setVisited]",{"range":"119","text":"120"},[2249,2285],"[page, searchVal, sortOrder, sortBy, rows, setRows, setHasMore]",[10904,10940],"[page, searchVal, sortOrder, sortBy, rows, setRows, setHasMore, setGotData, visit, setVisited]"]